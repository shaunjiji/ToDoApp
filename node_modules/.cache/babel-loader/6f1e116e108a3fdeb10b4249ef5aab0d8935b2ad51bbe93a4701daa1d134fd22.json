{"ast":null,"code":"var _jsxFileName = \"/Users/shaunjiji/Documents/MGR/ToDoApp/src/components/EditToDoForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditToDoForm = ({\n  updateTodo,\n  todo\n}) => {\n  _s();\n  const [value, setValue] = useState(todo.task);\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateTodo(value, todo.id);\n    setValue(\"\");\n  };\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"to-do-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"to-do-input\",\n      placeholder: \"Update Task\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"to-do-btn\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(EditToDoForm, \"YhotVAae0cjIYq2g+utGh/LDEqY=\");\n_c = EditToDoForm;\nexport default EditToDoForm;\nvar _c;\n$RefreshReg$(_c, \"EditToDoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditToDoForm","updateTodo","todo","_s","value","setValue","task","handleSubmit","e","preventDefault","id","handleChange","target","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shaunjiji/Documents/MGR/ToDoApp/src/components/EditToDoForm.tsx"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from \"react\";\nimport { EditToDoFormInterface } from \"../interface\";\n\n\nconst EditToDoForm: React.FC<EditToDoFormInterface>= ({ updateTodo, todo }) => {\n  const [value, setValue] = useState<string>(todo.task);\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    updateTodo(value, todo.id);\n    setValue(\"\");\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <form className=\"to-do-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"to-do-input\"\n        placeholder=\"Update Task\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"to-do-btn\">\n        Update Task\n      </button>\n    </form>\n  );\n};\n\nexport default EditToDoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhE,MAAMC,YAA6C,GAAEA,CAAC;EAAEC,UAAU;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAASK,IAAI,CAACI,IAAI,CAAC;EAErD,MAAMC,YAAY,GAAIC,CAA6B,IAAK;IACtDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,UAAU,CAACG,KAAK,EAAEF,IAAI,CAACQ,EAAE,CAAC;IAC1BL,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMM,YAAY,GAAIH,CAAgC,IAAK;IACzDH,QAAQ,CAACG,CAAC,CAACI,MAAM,CAACR,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEL,OAAA;IAAMc,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAClDhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXH,SAAS,EAAC,aAAa;MACvBI,WAAW,EAAC,aAAa;MACzBb,KAAK,EAAEA,KAAM;MACbc,QAAQ,EAAEP;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,WAAW;MAAAE,QAAA,EAAC;IAE5C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnB,EAAA,CA3BIH,YAA6C;AAAAuB,EAAA,GAA7CvB,YAA6C;AA6BnD,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}