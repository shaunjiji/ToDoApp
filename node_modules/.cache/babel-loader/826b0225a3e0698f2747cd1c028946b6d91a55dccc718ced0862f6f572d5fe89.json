{"ast":null,"code":"var _jsxFileName = \"/Users/shaunjiji/Documents/ToDo App v1/todo-app-v1/src/components/ToDoContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\nimport AlertComponent from \"./AlertComponent\";\nimport DialogComponent from \"./DialogComponent\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContainer = () => {\n  _s();\n  // State to manage the list of todos\n  const [todos, setTodos] = useState([]);\n\n  // State to manage the alert message\n  // const [alertMessage, setAlertMessage] = useState<string>(\"\");\n  // const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [alert, setAlert] = useState({\n    message: \"\",\n    show: false\n  });\n  // State to manage the dialog\n  const [showDialog, setShowDialog] = useState(false);\n  const [deleteTaskId, setDeleteTaskId] = useState(\"\");\n\n  // Function to handle character limit alert\n  // const handleAddTodoCharAlert = (todo: string) => {\n  //   if(todo.length >= 40) {\n  //     setAlertMessage(\"Character limit exceeded (max 40 characters)!\");\n  //     setShowAlert(true);\n  //   } else {\n  //     setShowAlert(false);\n  //   }\n  // }\n\n  // // Function to add a new todo \n  // const addTodo = (todo: string) => {\n  //   // Check to see if user inputs only whitespace\n  //   if (/^\\s*$/.test(todo)){\n  //     setAlertMessage(\"Please enter a task!\");\n  //     setShowAlert(true);\n  //     return false;\n  //   }\n  //   const newTask: ToDoInterface = {\n  //     id: uuidv4(), // Generate a unique ID for each todo\n  //     task: todo,\n  //     completed: false,\n  //     isEditing: false,\n  //   };\n  //   setTodos((prevTodos)=> [...prevTodos, newTask]);\n  //   setShowAlert(false);\n  // };\n\n  const addTodo = todo => {\n    const trimmedTodo = todo.trim();\n    if (!trimmedTodo) {\n      setAlert({\n        message: \"Please enter a task!\",\n        show: true\n      });\n    } else if (trimmedTodo.length > 40) {\n      setAlert({\n        message: \"Character limit exceeded (max 40 characters)!\",\n        show: true\n      });\n    } else {\n      const newTask = {\n        id: uuidv4(),\n        task: trimmedTodo,\n        completed: false,\n        isEditing: false\n      };\n      setTodos(prevTodos => [...prevTodos, newTask]);\n      setAlert({\n        message: \"\",\n        show: false\n      });\n    }\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  // Function to show Dialog component to confirm task deletion\n  const deleteTodo = id => {\n    setDeleteTaskId(id);\n    setShowDialog(true);\n  };\n\n  // Function to delete task\n  const confirmDelete = () => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== deleteTaskId));\n    setShowDialog(false);\n  };\n  // Function to toggle edit mode\n  const editTodo = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task, id) => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Handle Alert component's onClose\n  const handleAlertOnClose = () => {\n    setShowAlert(false);\n  };\n\n  // Handle Dialog component's onClose\n  const handleDialogOnClose = () => {\n    setShowDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"to-do-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo,\n      handleAddTodoCharAlert: handleAddTodoCharAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertComponent, {\n      message: alertMessage,\n      severity: \"warning\",\n      onClose: handleAlertOnClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), showDialog && /*#__PURE__*/_jsxDEV(DialogComponent, {\n      open: showDialog,\n      onClose: handleDialogOnClose,\n      onConfirm: confirmDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks have been added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditToDoForm, {\n      updateTodo: updateTodo,\n      todo: todo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoContainer, \"f8XcPL2mGHBhN91F4/fXznfo+Qg=\");\n_c = ToDoContainer;\nexport default ToDoContainer;\nvar _c;\n$RefreshReg$(_c, \"ToDoContainer\");","map":{"version":3,"names":["useState","ToDoForm","ToDo","EditToDoForm","AlertComponent","DialogComponent","v4","uuidv4","jsxDEV","_jsxDEV","ToDoContainer","_s","todos","setTodos","alert","setAlert","message","show","showDialog","setShowDialog","deleteTaskId","setDeleteTaskId","addTodo","todo","trimmedTodo","trim","length","newTask","id","task","completed","isEditing","prevTodos","toggleComplete","map","deleteTodo","confirmDelete","filter","editTodo","updateTodo","handleAlertOnClose","setShowAlert","handleDialogOnClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAddTodoCharAlert","showAlert","alertMessage","severity","onClose","open","onConfirm","_c","$RefreshReg$"],"sources":["/Users/shaunjiji/Documents/ToDo App v1/todo-app-v1/src/components/ToDoContainer.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\nimport AlertComponent from \"./AlertComponent\";\nimport DialogComponent from \"./DialogComponent\";\n\nimport { ToDoInterface } from \"../interface\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n\n\nconst ToDoContainer = () => {\n  // State to manage the list of todos\n  const [todos, setTodos] = useState<ToDoInterface[]>([]);\n\n  // State to manage the alert message\n  // const [alertMessage, setAlertMessage] = useState<string>(\"\");\n  // const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [alert, setAlert] = useState<{ message: string; show: boolean }>({\n    message: \"\",\n    show: false,\n  });\n  // State to manage the dialog\n  const [showDialog, setShowDialog] = useState<boolean>(false);\n  const [deleteTaskId, setDeleteTaskId] = useState<string>(\"\");\n  \n  // Function to handle character limit alert\n  // const handleAddTodoCharAlert = (todo: string) => {\n  //   if(todo.length >= 40) {\n  //     setAlertMessage(\"Character limit exceeded (max 40 characters)!\");\n  //     setShowAlert(true);\n  //   } else {\n  //     setShowAlert(false);\n  //   }\n  // }\n\n  // // Function to add a new todo \n  // const addTodo = (todo: string) => {\n  //   // Check to see if user inputs only whitespace\n  //   if (/^\\s*$/.test(todo)){\n  //     setAlertMessage(\"Please enter a task!\");\n  //     setShowAlert(true);\n  //     return false;\n  //   }\n  //   const newTask: ToDoInterface = {\n  //     id: uuidv4(), // Generate a unique ID for each todo\n  //     task: todo,\n  //     completed: false,\n  //     isEditing: false,\n  //   };\n  //   setTodos((prevTodos)=> [...prevTodos, newTask]);\n  //   setShowAlert(false);\n  // };\n\n  const addTodo = (todo: string) => {\n    const trimmedTodo = todo.trim();\n    if (!trimmedTodo) {\n      setAlert({ message: \"Please enter a task!\", show: true });\n    } else if (trimmedTodo.length > 40) {\n      setAlert({ message: \"Character limit exceeded (max 40 characters)!\", show: true });\n    } else {\n      const newTask: ToDoInterface = {\n        id: uuidv4(),\n        task: trimmedTodo,\n        completed: false,\n        isEditing: false,\n      };\n      setTodos((prevTodos) => [...prevTodos, newTask]);\n      setAlert({ message: \"\", show: false });\n    }\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    );\n  };\n\n  // Function to show Dialog component to confirm task deletion\n  const deleteTodo = (id: string) => {\n    setDeleteTaskId(id);\n    setShowDialog(true);\n    \n  };\n  \n  // Function to delete task\n  const confirmDelete = () => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== deleteTaskId));\n    setShowDialog(false);\n\n  }\n  // Function to toggle edit mode\n  const editTodo = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo,\n      ),\n    );\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task: string, id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo,\n      ),\n    );\n  };\n  \n  // Handle Alert component's onClose\n  const handleAlertOnClose = () => {\n    setShowAlert(false)\n  }\n\n  // Handle Dialog component's onClose\n  const handleDialogOnClose = () => {\n    setShowDialog(false);\n  }\n\n  return (\n    <div className=\"to-do-container\">\n      <h1>My To-Do List</h1>\n      <ToDoForm addTodo={addTodo} handleAddTodoCharAlert={handleAddTodoCharAlert}/>\n      {showAlert && (\n        <AlertComponent message={alertMessage} severity=\"warning\" onClose={handleAlertOnClose} />\n      )}\n      {showDialog && (\n        <DialogComponent open={showDialog} onClose={handleDialogOnClose} onConfirm={confirmDelete} />\n      )}\n      {/* Conditional rendering based on whether there are todos or not */}\n      {todos.length === 0 ? (\n        <p>No tasks have been added yet!</p>\n      ) : (\n        todos.map((todo) =>\n          todo.isEditing ? (\n            <EditToDoForm updateTodo={updateTodo} todo={todo} key={todo.id} />\n          ) : (\n            <ToDo\n              todo={todo}\n              key={todo.id}\n              toggleComplete={toggleComplete}\n              deleteTodo={deleteTodo}\n              editTodo={editTodo}\n            />\n          ),\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ToDoContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}