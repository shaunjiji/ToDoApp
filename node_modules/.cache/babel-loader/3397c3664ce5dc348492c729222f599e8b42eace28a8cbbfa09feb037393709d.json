{"ast":null,"code":"var _jsxFileName = \"/Users/shaunjiji/Documents/MRG/src/components/ToDoContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\nimport AlertComponent from \"./AlertComponent\";\nimport DialogComponent from \"./DialogComponent\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContainer = () => {\n  _s();\n  // State to manage the list of todos\n  const [todos, setTodos] = useState([]);\n\n  // State to manage the alert message\n  const [alert, setAlert] = useState({\n    message: \"\",\n    show: false\n  });\n\n  // State to manage the dialog\n  const [dialog, setDialog] = useState({\n    showDialog: false,\n    deleteTaskId: \"\"\n  });\n\n  // Function to handle character limit alert\n  const handleAddTodoCharAlert = todo => {\n    if (todo.length >= 40) {\n      setAlert({\n        message: \"Character limit exceeded (max 40 characters)!\",\n        show: true\n      });\n      ;\n    } else {\n      setAlert({\n        message: \"\",\n        show: false\n      });\n    }\n  };\n\n  // Function to add a new todo \n  const addTodo = todo => {\n    // Check to see if user inputs only whitespace\n    if (/^\\s*$/.test(todo)) {\n      setAlert({\n        message: \"Please enter a task!\",\n        show: true\n      });\n      return false;\n    }\n    const newTask = {\n      id: uuidv4(),\n      // Generate a unique ID for each todo\n      task: todo,\n      completed: false,\n      isEditing: false\n    };\n    setTodos(prevTodos => [...prevTodos, newTask]);\n    setAlert({\n      message: \"\",\n      show: false\n    });\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  // Function to show Dialog component to confirm task deletion\n  const deleteTodo = id => {\n    setDialog({\n      showDialog: true,\n      deleteTaskId: id\n    });\n  };\n\n  // Function to delete task\n  const confirmDelete = () => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== dialog.deleteTaskId));\n    setDialog({\n      showDialog: false,\n      deleteTaskId: \"\"\n    });\n  };\n  // Function to toggle edit mode\n  const editTodo = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task, id) => {\n    if (task.length === 0) {\n      setAlert({\n        message: \"Please enter a task!\",\n        show: true\n      });\n    } else if (task.length > 40) {\n      setAlert({\n        message: \"Character limit exceeded (max 40 characters)!\",\n        show: true\n      });\n    } else {\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n        ...todo,\n        task,\n        isEditing: !todo.isEditing\n      } : todo));\n    }\n  };\n\n  // Handle Alert component's onClose\n  const handleAlertOnClose = () => {\n    setAlert({\n      message: \"\",\n      show: false\n    });\n  };\n\n  // Handle Dialog component's onClose\n  const handleDialogOnClose = () => {\n    setDialog({\n      showDialog: false,\n      deleteTaskId: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"to-do-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo,\n      handleAddTodoCharAlert: handleAddTodoCharAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), alert.show && /*#__PURE__*/_jsxDEV(AlertComponent, {\n      message: alert.message,\n      severity: \"warning\",\n      onClose: handleAlertOnClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), dialog.showDialog && /*#__PURE__*/_jsxDEV(DialogComponent, {\n      open: dialog.showDialog,\n      onClose: handleDialogOnClose,\n      onConfirm: confirmDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks have been added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditToDoForm, {\n      updateTodo: updateTodo,\n      todo: todo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoContainer, \"+o8T63kRXDE8EeiuJLbtDv8Vxx4=\");\n_c = ToDoContainer;\nexport default ToDoContainer;\nvar _c;\n$RefreshReg$(_c, \"ToDoContainer\");","map":{"version":3,"names":["useState","ToDoForm","ToDo","EditToDoForm","AlertComponent","DialogComponent","v4","uuidv4","jsxDEV","_jsxDEV","ToDoContainer","_s","todos","setTodos","alert","setAlert","message","show","dialog","setDialog","showDialog","deleteTaskId","handleAddTodoCharAlert","todo","length","addTodo","test","newTask","id","task","completed","isEditing","prevTodos","toggleComplete","map","deleteTodo","confirmDelete","filter","editTodo","updateTodo","handleAlertOnClose","handleDialogOnClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","onClose","open","onConfirm","_c","$RefreshReg$"],"sources":["/Users/shaunjiji/Documents/MRG/src/components/ToDoContainer.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\nimport AlertComponent from \"./AlertComponent\";\nimport DialogComponent from \"./DialogComponent\";\n\nimport { ToDoInterface } from \"../interface\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ToDoContainer = () => {\n  // State to manage the list of todos\n  const [todos, setTodos] = useState<ToDoInterface[]>([]);\n\n  // State to manage the alert message\n  const [alert, setAlert] = useState<{ message: string; show: boolean }>({\n    message: \"\",\n    show: false,\n  });\n  \n  // State to manage the dialog\n  const [dialog, setDialog] = useState<{ showDialog: boolean; deleteTaskId: string }>({\n    showDialog: false,\n    deleteTaskId: \"\",\n  });\n  \n  // Function to handle character limit alert\n  const handleAddTodoCharAlert = (todo: string) => {\n    if(todo.length >= 40) {\n      setAlert({ message:  \"Character limit exceeded (max 40 characters)!\", show: true });;\n    } else {\n      setAlert({message:\"\",show: false});\n    }\n  }\n\n  // Function to add a new todo \n  const addTodo = (todo: string) => {\n    // Check to see if user inputs only whitespace\n    if (/^\\s*$/.test(todo)){\n      setAlert({ message: \"Please enter a task!\", show: true });\n      return false;\n    }\n    const newTask: ToDoInterface = {\n      id: uuidv4(), // Generate a unique ID for each todo\n      task: todo,\n      completed: false,\n      isEditing: false,\n    };\n    setTodos((prevTodos)=> [...prevTodos, newTask]);\n    setAlert({message:\"\",show: false});\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    );\n  };\n\n  // Function to show Dialog component to confirm task deletion\n  const deleteTodo = (id: string) => {\n    setDialog({ showDialog: true, deleteTaskId: id });\n    \n  };\n  \n  // Function to delete task\n  const confirmDelete = () => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== dialog.deleteTaskId));\n    setDialog({ showDialog: false, deleteTaskId: \"\" });\n\n  }\n  // Function to toggle edit mode\n  const editTodo = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo,\n      ),\n    );\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task: string, id: string) => {\n    if (task.length === 0) {\n      setAlert({ message: \"Please enter a task!\", show: true });\n    }\n    else if (task.length > 40){\n      setAlert({ message:  \"Character limit exceeded (max 40 characters)!\", show: true })\n    }\n    else{\n      setTodos((prevTodos) =>\n        prevTodos.map((todo) =>\n          todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo,\n        ),\n      );\n    }\n  };\n  \n  // Handle Alert component's onClose\n  const handleAlertOnClose = () => {\n    setAlert({message:\"\",show: false});\n  }\n\n  // Handle Dialog component's onClose\n  const handleDialogOnClose = () => {\n    setDialog({ showDialog: false, deleteTaskId: \"\" });\n  }\n  \n\n  return (\n    <div className=\"to-do-container\">\n      <h1>My To-Do List</h1>\n      <ToDoForm addTodo={addTodo} handleAddTodoCharAlert={handleAddTodoCharAlert}/>\n      {alert.show && (\n        <AlertComponent message={alert.message} severity=\"warning\" onClose={handleAlertOnClose} />\n      )}\n      {dialog.showDialog && (\n        <DialogComponent open={dialog.showDialog} onClose={handleDialogOnClose} onConfirm={confirmDelete} />\n      )}\n      {/* Conditional rendering based on whether there are todos or not */}\n      {todos.length === 0 ? (\n        <p>No tasks have been added yet!</p>\n      ) : (\n        todos.map((todo) =>\n          todo.isEditing ? (\n            <EditToDoForm updateTodo={updateTodo} todo={todo} key={todo.id} />\n          ) : (\n            <ToDo\n              todo={todo}\n              key={todo.id}\n              toggleComplete={toggleComplete}\n              deleteTodo={deleteTodo}\n              editTodo={editTodo}\n            />\n          ),\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ToDoContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}