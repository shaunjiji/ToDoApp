{"ast":null,"code":"var _jsxFileName = \"/Users/shaunjiji/Documents/ToDo App v1/todo-app-v1/src/components/ToDoContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContainer = () => {\n  _s();\n  // State to manage the list of todos\n  const [todos, setTodos] = useState([]);\n\n  // Function to add a new todo\n  const addTodo = todo => {\n    if (/^\\s*$/.test(todo)) {\n      alert(\"Please enter a task\");\n    }\n    const newTask = {\n      id: uuidv4(),\n      // Generate a unique ID for each todo\n      task: todo,\n      completed: false,\n      isEditing: false\n    };\n    setTodos([...todos, newTask]);\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  // Function to delete a todo\n  const deleteTodo = id => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n\n  // Function to to toggle edit mode\n  const editTodo = id => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task, id) => {\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks have been added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditToDoForm, {\n      updateTodo: updateTodo,\n      todo: todo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoContainer, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = ToDoContainer;\nexport default ToDoContainer;\nvar _c;\n$RefreshReg$(_c, \"ToDoContainer\");","map":{"version":3,"names":["React","useState","ToDoForm","ToDo","EditToDoForm","v4","uuidv4","jsxDEV","_jsxDEV","ToDoContainer","_s","todos","setTodos","addTodo","todo","test","alert","newTask","id","task","completed","isEditing","toggleComplete","prevTodos","map","deleteTodo","filter","editTodo","updateTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/shaunjiji/Documents/ToDo App v1/todo-app-v1/src/components/ToDoContainer.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport EditToDoForm from \"./EditToDoForm\";\n\nimport { ToDoInterface } from \"../interface\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ToDoContainer = () => {\n  // State to manage the list of todos\n  const [todos, setTodos] = useState<ToDoInterface[]>([]);\n\n  // Function to add a new todo\n  const addTodo = (todo: string) => {\n    if (/^\\s*$/.test(todo)){\n      alert(\"Please enter a task\")\n    }\n    const newTask: ToDoInterface = {\n      id: uuidv4(), // Generate a unique ID for each todo\n      task: todo,\n      completed: false,\n      isEditing: false,\n    };\n    setTodos([...todos, newTask]);\n  };\n\n  // Function to mark existing todo as completed\n  const toggleComplete = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    );\n  };\n\n  // Function to delete a todo\n  const deleteTodo = (id: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  };\n\n  // Function to to toggle edit mode\n  const editTodo = (id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo,\n      ),\n    );\n  };\n\n  // Function to update an existing todo\n  const updateTodo = (task: string, id: string) => {\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo,\n      ),\n    );\n  };\n\n  return (\n    <div className=\"TodoContainer\">\n      <h1>My Task List</h1>\n      <ToDoForm addTodo={addTodo} />\n\n      {/* Conditional rendering based on whether there are todos or not */}\n      {todos.length === 0 ? (\n        <p>No tasks have been added yet!</p>\n      ) : (\n        todos.map((todo) =>\n          todo.isEditing ? (\n            <EditToDoForm updateTodo={updateTodo} todo={todo} key={todo.id} />\n          ) : (\n            <ToDo\n              todo={todo}\n              key={todo.id}\n              toggleComplete={toggleComplete}\n              deleteTodo={deleteTodo}\n              editTodo={editTodo}\n            />\n          ),\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ToDoContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}